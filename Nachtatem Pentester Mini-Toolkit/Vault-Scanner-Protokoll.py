import requests
import random

# Sprüche für die Header-Ausgabe
vault_quotes = [
    "🛠️ Nachtatem scannt die Leitungen der Vault…",
    "⚡ Sicherheitsprotokolle prüfen…",
    "💀 Alte Server-Geister werden geweckt…",
    "🔥 Ein digitales Geheimnis wird gelüftet…",
    "🦖 Selbst ein Dino hätte Respekt vor diesen Headern!"
]

# Typische User-Agents
user_agents = [
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 13_5) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.6 Safari/605.1.15",
    "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:116.0) Gecko/20100101 Firefox/116.0",
    "curl/7.88.1"
]

# Wichtige Header für Highlight
highlight_headers = ["Server", "Set-Cookie", "Strict-Transport-Security", "Content-Security-Policy", "X-Frame-Options"]

# Ziel-URL abfragen
url = input("Gib die URL ein (z.B. http://example.com): ").strip()

# Zufälligen Spruch ausgeben
print(random.choice(vault_quotes))

# Zufälligen User-Agent auswählen
headers = {
    "User-Agent": random.choice(user_agents)
}

try:
    response = requests.get(url, headers=headers)
    print(f"\n🔍 HTTP-Header für {url}:")
    print("="*40)

    found_security_headers = 0
    
    for key, value in response.headers.items():
        if key in highlight_headers:
            print(f"⚡ {key}: {value} ⚡")  # Highlighted
            found_security_headers += 1
        else:
            print(f"{key}: {value}")

    # Vault-Sicherheitsreport
    print("\n📝 Vault-Sicherheitsreport:")
    print(f"Gefundene Sicherheitsheader: {found_security_headers} / {len(highlight_headers)}")

    if found_security_headers == len(highlight_headers):
        print("✅ Vault gut gesichert! Keine offensichtlichen Header-Lücken.")
    elif found_security_headers >= len(highlight_headers) // 2:
        print("⚠️ Vault teilweise gesichert. Einige Header fehlen.")
    else:
        print("💀 Warnung: Sicherheitslücken möglich! Vault-Verteidigung schwach.")
    
except requests.exceptions.RequestException as e:
    print(f"💀 Fehler beim Abrufen der Header: {e}")
